{"ast":null,"code":"import _toConsumableArray from\"/Users/samueldavidson/Documents/GitHub/Portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/samueldavidson/Documents/GitHub/Portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/samueldavidson/Documents/GitHub/Portfolio/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _createReducer;import createReducer from'../_utils/createReducers';import{REQ_POSTS_PENDING,REQ_POSTS_SUCCESS,REQ_POSTS_ERROR,ADD_POST_ERROR,ADD_POST_PENDING,ADD_POST_SUCCESS,REQ_POST_PENDING,REQ_POST_SUCCESS,REQ_POST_ERROR,UPDATE_POST_ERROR,UPDATE_POST_PENDING,UPDATE_POST_SUCCESS}from'../actionTypes';var initialState={// hold id = key\nbyId:{},// [] of ids\nallIds:[],// needed for cache state\nloadedAt:0,// tracking if the state is loading\nisLoading:false,// any errors loading all the data\nerror:null};function postsPending(state,action){return _objectSpread(_objectSpread({},state),{},{isLoading:true,error:null});}function postsSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{isLoading:false,loadedAt:Date.now(),error:null,byId:_objectSpread(_objectSpread({},state.byId),action.data.reduce(function(posts,post){return _objectSpread(_objectSpread({},posts),{},_defineProperty({},post.id,{data:post,isLoading:false,loadedAt:Date.now(),error:null}));},{})),allIds:_toConsumableArray(new Set([].concat(_toConsumableArray(state.allIds),_toConsumableArray(action.data.map(function(post){return post.id;})))))});}function postsError(state,action){return _objectSpread(_objectSpread({},state),{},{isLoading:false,error:action.err});}function postPending(state,action){return _objectSpread(_objectSpread({},state),{},{byId:_objectSpread(_objectSpread({},state.byId),{},_defineProperty({},action.payload.id,_objectSpread(_objectSpread({},state.byId[action.payload.id]),{},{isLoading:true,error:null})))});}function postSuccess(state,action){return _objectSpread(_objectSpread({},state),{},{byId:_objectSpread(_objectSpread({},state.byId),{},_defineProperty({},action.payload.id,{isLoading:false,error:null,loadedAt:Date.now(),data:action.data})),allIds:_toConsumableArray(new Set([].concat(_toConsumableArray(state.allIds),_toConsumableArray(action.payload.id))))});}function postError(state,action){return _objectSpread(_objectSpread({},state),{},{byId:_objectSpread(_objectSpread({},state.byId),{},_defineProperty({},action.payload.id,_objectSpread(_objectSpread({},state.byId[action.payload.id]),{},{isLoading:false,error:action.err})))});}export default createReducer(initialState,(_createReducer={},_defineProperty(_createReducer,REQ_POSTS_PENDING,postsPending),_defineProperty(_createReducer,REQ_POSTS_SUCCESS,postsSuccess),_defineProperty(_createReducer,REQ_POSTS_ERROR,postsError),_defineProperty(_createReducer,ADD_POST_ERROR,postError),_defineProperty(_createReducer,ADD_POST_PENDING,postPending),_defineProperty(_createReducer,ADD_POST_SUCCESS,postSuccess),_defineProperty(_createReducer,REQ_POST_ERROR,postError),_defineProperty(_createReducer,REQ_POST_PENDING,postPending),_defineProperty(_createReducer,REQ_POST_SUCCESS,postSuccess),_defineProperty(_createReducer,UPDATE_POST_PENDING,postPending),_defineProperty(_createReducer,UPDATE_POST_SUCCESS,postSuccess),_defineProperty(_createReducer,UPDATE_POST_ERROR,postError),_createReducer));","map":{"version":3,"sources":["/Users/samueldavidson/Documents/GitHub/Portfolio/client/src/store/posts/reducer.js"],"names":["createReducer","REQ_POSTS_PENDING","REQ_POSTS_SUCCESS","REQ_POSTS_ERROR","ADD_POST_ERROR","ADD_POST_PENDING","ADD_POST_SUCCESS","REQ_POST_PENDING","REQ_POST_SUCCESS","REQ_POST_ERROR","UPDATE_POST_ERROR","UPDATE_POST_PENDING","UPDATE_POST_SUCCESS","initialState","byId","allIds","loadedAt","isLoading","error","postsPending","state","action","postsSuccess","Date","now","data","reduce","posts","post","id","Set","map","postsError","err","postPending","payload","postSuccess","postError"],"mappings":"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","sourcesContent":["import createReducer from '../_utils/createReducers';\n\nimport {\n  REQ_POSTS_PENDING,\n  REQ_POSTS_SUCCESS,\n  REQ_POSTS_ERROR,\n  \n  ADD_POST_ERROR,\n  ADD_POST_PENDING,\n  ADD_POST_SUCCESS,\n\n  REQ_POST_PENDING,\n  REQ_POST_SUCCESS,\n  REQ_POST_ERROR,\n\n  UPDATE_POST_ERROR,\n  UPDATE_POST_PENDING,\n  UPDATE_POST_SUCCESS\n} from '../actionTypes';\n\nconst initialState = {\n  // hold id = key\n  byId: {},\n  // [] of ids\n  allIds: [],\n\n  // needed for cache state\n  loadedAt: 0,\n  // tracking if the state is loading\n  isLoading: false,\n  // any errors loading all the data\n  error: null\n};\n\nfunction postsPending(state, action) {\n  return { ...state, isLoading: true, error: null };\n}\n\nfunction postsSuccess(state, action) {\n  return {\n    ...state,\n    isLoading: false,\n    loadedAt: Date.now(),\n    error: null,\n    byId: {\n      ...state.byId,\n      ...action.data.reduce(\n        (posts, post) => ({\n          // current opject\n          ...posts,\n          // add id as key and an object for loading\n          [post.id]: {\n            data: post,\n            isLoading: false,\n            loadedAt: Date.now(),\n            error: null\n          }\n        }),\n        {}\n      )\n    },\n    allIds: [...new Set([...state.allIds, ...action.data.map(post => post.id)])]\n  };\n}\n\nfunction postsError(state, action) {\n  return {\n    ...state,\n    isLoading: false,\n    error: action.err\n  };\n}\n\nfunction postPending(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        ...state.byId[action.payload.id],\n        isLoading: true,\n        error: null\n      }\n    }\n  };\n}\n\nfunction postSuccess(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        isLoading: false,\n        error: null,\n        loadedAt: Date.now(),\n        data: action.data\n      }\n    },\n    allIds: [...new Set([...state.allIds, ...action.payload.id])]\n  };\n}\n\nfunction postError(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        ...state.byId[action.payload.id],\n        isLoading: false,\n        error: action.err\n      }\n    }\n  };\n}\n\nexport default createReducer(initialState, {\n  [REQ_POSTS_PENDING]: postsPending,\n  [REQ_POSTS_SUCCESS]: postsSuccess,\n  [REQ_POSTS_ERROR]: postsError,\n\n  [ADD_POST_ERROR]: postError,\n  [ADD_POST_PENDING]: postPending,\n  [ADD_POST_SUCCESS]: postSuccess,\n\n  [REQ_POST_ERROR]: postError,\n  [REQ_POST_PENDING]: postPending,\n  [REQ_POST_SUCCESS]: postSuccess,\n\n  [UPDATE_POST_PENDING]: postPending,\n  [UPDATE_POST_SUCCESS]: postSuccess,\n  [UPDATE_POST_ERROR]: postError\n});\n"]},"metadata":{},"sourceType":"module"}