{"ast":null,"code":"// take init state and handlers\nexport default function createReducer(initialState, handlers) {\n  // returns reducer function called for each dispatch\n  return function reducer(state = initialState, action) {\n    if (handlers[action.type]) {\n      // return the state\n      return handlers[action.type](state, action);\n    }\n\n    return state;\n  };\n}","map":{"version":3,"sources":["/Users/samueldavidson/Documents/GitHub/Portfolio/client/src/store/_utils/createReducers.js"],"names":["createReducer","initialState","handlers","reducer","state","action","type"],"mappings":"AAAA;AACA,eAAe,SAASA,aAAT,CAAuBC,YAAvB,EAAqCC,QAArC,EAA+C;AAC5D;AACA,SAAO,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuCI,MAAvC,EAA+C;AACpD,QAAIH,QAAQ,CAACG,MAAM,CAACC,IAAR,CAAZ,EAA2B;AACzB;AACA,aAAOJ,QAAQ,CAACG,MAAM,CAACC,IAAR,CAAR,CAAsBF,KAAtB,EAA6BC,MAA7B,CAAP;AACD;;AACD,WAAOD,KAAP;AACD,GAND;AAOD","sourcesContent":["// take init state and handlers\nexport default function createReducer(initialState, handlers) {\n  // returns reducer function called for each dispatch\n  return function reducer(state = initialState, action) {\n    if (handlers[action.type]) {\n      // return the state\n      return handlers[action.type](state, action);\n    }\n    return state;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}