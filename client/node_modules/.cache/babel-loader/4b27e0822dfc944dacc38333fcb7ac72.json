{"ast":null,"code":"// take init state and handlers\nexport default function createReducer(initialState,handlers){// returns reducer function called for each dispatch\nreturn function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;if(handlers[action.type]){// return the state\nreturn handlers[action.type](state,action);}return state;};}","map":{"version":3,"sources":["/Users/samueldavidson/Documents/GitHub/Portfolio/client/src/store/_utils/createReducers.js"],"names":["createReducer","initialState","handlers","reducer","state","action","type"],"mappings":"AAAA;AACA,cAAe,SAASA,CAAAA,aAAT,CAAuBC,YAAvB,CAAqCC,QAArC,CAA+C,CAC5D;AACA,MAAO,SAASC,CAAAA,OAAT,EAA+C,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CACpD,GAAIH,QAAQ,CAACG,MAAM,CAACC,IAAR,CAAZ,CAA2B,CACzB;AACA,MAAOJ,CAAAA,QAAQ,CAACG,MAAM,CAACC,IAAR,CAAR,CAAsBF,KAAtB,CAA6BC,MAA7B,CAAP,CACD,CACD,MAAOD,CAAAA,KAAP,CACD,CAND,CAOD","sourcesContent":["// take init state and handlers\nexport default function createReducer(initialState, handlers) {\n  // returns reducer function called for each dispatch\n  return function reducer(state = initialState, action) {\n    if (handlers[action.type]) {\n      // return the state\n      return handlers[action.type](state, action);\n    }\n    return state;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}