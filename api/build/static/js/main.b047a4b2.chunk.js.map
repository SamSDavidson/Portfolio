{"version":3,"sources":["pages/landing/index.js","components/header/index.js","pages/about/index.js","pages/projects/index.js","components/post/index.js","store/_utils/API.js","pages/blog/container.js","store/posts/actions.js","store/actionTypes.js","pages/blog/index.js","store/posts/reducer.js","store/_utils/createReducers.js","store/index.js","store/_utils/callAPIMiddleware.js","App.js","serviceWorker.js","index.js","pages/landing/landing.module.css","components/post/post.module.css","logo.svg"],"names":["Landing","Container","className","styles","content","pageCards","Card","body","inverse","color","CardTitle","href","size","Component","Header","props","useState","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","About","name","fluid","ListGroup","horizontal","ListGroupItem","Table","bordered","scope","Projects","Alert","Post","post","this","id","title","API","axios","create","baseURL","process","API_URL","mapDispatchToProps","fetchPosts","types","callAPI","get","shouldCallAPI","state","posts","loadedAt","isLoading","isCached","Date","now","connect","byId","allIds","map","data","Blog","length","defaultProps","postPending","action","payload","error","postSuccess","Set","postError","err","createReducer","initialState","handlers","type","reduce","rootReducer","combineReducers","middleware","applyMiddleware","thunkMiddleware","dispatch","getState","next","a","Array","isArray","every","Error","requestType","successType","failureType","resp","createLogger","store","createStore","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.b047a4b2.chunk.js","sourcesContent":["import styles from './landing.module.css';\nimport { Container, Card, CardBody, CardTitle, Button, CardHeader, CardFooter, CardText } from 'reactstrap'\nimport React, { Component } from 'react';\nimport {FaIdCard} from 'react-icons/fa'\nimport {FaBook} from 'react-icons/fa'\nimport {FaCode} from 'react-icons/fa'\nimport {Link} from 'react-router-dom'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div>\n        <Container className={styles.content}>\n          <h1>Sam Davidson</h1>\n          <h2>Welcome to My Portfolio</h2>\n          <Container className={styles.pageCards}>\n            <Card body inverse color=\"success\">\n              <CardTitle>About</CardTitle>\n              <a href=\"/about\"><FaIdCard size=\"5rem\" color=\"white\"/></a>\n            </Card>\n            <Card body inverse color=\"info\">\n              <CardTitle>Projects</CardTitle>\n              <a href=\"/projects\"><FaCode size=\"5rem\" color=\"white\"/></a>\n            </Card>\n            <Card body inverse color=\"warning\">\n              <CardTitle>Blog</CardTitle>\n              <a href=\"/blog\"><FaBook size=\"5rem\" color=\"white\"/></a>\n            </Card>\n          </Container>\n\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Landing;\n","import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\n\nconst Header = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">SSDevelops</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/about\">About</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/projects\">Projects</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/blog\">Blog</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Container, ListGroup, ListGroupItem, Table, ListGroupItemHeading } from 'reactstrap';\nimport Header from '../../components/header/index';\nimport MetaTags from 'react-meta-tags';\nimport styles from './about.module.css';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        <MetaTags>\n          <title>About</title>\n          <meta name=\"About\" content=\"About content\"></meta>\n          <meta name=\"keywords\" content=\"about,contact,resume,samuel davidson resume\"></meta>\n        </MetaTags>\n        <Header />\n        <h1>About Sam</h1>\n        <Container fluid>\n          <section>\n            <h2>Who Am I?</h2>\n            <p>\n              Born in 1991 I am an avid technology fan.\n              My major passions include figuring out how technology works, and doing a deep dive into new tools and technology such as computers, web browsers and mobile devices.\n              This has translated into my educational and professional choices via my current occupation as a Internet Repair Specialist and degree in Website Design & Development at Full Sail University.\n            </p>\n          </section>\n          <section>\n            <h2>Skills</h2>\n            <hr></hr>\n            <h3>Web Development</h3>\n            <ListGroup horizontal>\n              <ListGroupItem color=\"info\">HTML</ListGroupItem>\n              <ListGroupItem color=\"info\">CSS</ListGroupItem>\n              <ListGroupItem color=\"info\">JavaScript</ListGroupItem>\n              <ListGroupItem color=\"info\">SQL</ListGroupItem>\n              <ListGroupItem color=\"info\">Node</ListGroupItem>\n              <ListGroupItem color=\"info\">Express</ListGroupItem>\n            </ListGroup>\n            <h3>Customer Service</h3>\n            <ListGroup horizontal>\n              <ListGroupItem color=\"info\">Phone Based Support</ListGroupItem>\n              <ListGroupItem color=\"info\">Fraud Reports</ListGroupItem>\n              <ListGroupItem color=\"info\">Conflict De-escalation</ListGroupItem>\n              <ListGroupItem color=\"info\">Live In-Person Support</ListGroupItem>\n              <ListGroupItem color=\"info\">Express</ListGroupItem>\n            </ListGroup>\n            <h3>Office Skills</h3>\n\n            <ListGroup horizontal>\n              <ListGroupItem color=\"info\">Microsoft Office</ListGroupItem>\n              <ListGroupItem color=\"info\">CRM</ListGroupItem>\n              <ListGroupItem color=\"info\">Records Maintenance</ListGroupItem>\n              <ListGroupItem color=\"info\">Help-Desk Technical Support</ListGroupItem>\n            </ ListGroup>\n          </section>\n          <section>\n            <h2>Education</h2>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th>Grade</th>\n                  <th>School</th>\n                  <th>Degree</th>\n                  <th>Completed</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th scope=\"row\">K-12</th>\n                  <td>Horizon Charter School</td>\n                  <td>General Studies</td>\n                  <td>2010</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">University</th>\n                  <td>Full Sail University</td>\n                  <td>Web Design & Development</td>\n                  <td>2020</td>\n                </tr>\n              </tbody>\n            </Table>\n          </section>\n          <section>\n            <h2>Work History</h2>\n            <Table bordered>\n              <thead>\n                <tr>\n                  <th>Years</th>\n                  <th>Workplace</th>\n                  <th>Position</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th scope=\"row\">2019-Current</th>\n                  <td>Spectum</td>\n                  <td>Internet Repair Specialist</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">2018-2019</th>\n                  <td>ActivEngage</td>\n                  <td>Chat Specialist</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">2017-2018</th>\n                  <td>AAA</td>\n                  <td>Customer Service Representative</td>\n                </tr>\n                <tr>\n                  <th scope=\"row\">2015-2018</th>\n                  <td>CCBill</td>\n                  <td>Technical Support Agent</td>\n                </tr>\n              </tbody>\n            </Table>\n          </section>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport Header from '../../components/header/index';\nimport MetaTags from 'react-meta-tags';\nimport { Container, Alert } from 'reactstrap';\nimport style from './projects.module.css';\n\nclass Projects extends Component {\n  render() {\n    return (\n      <div>\n        <MetaTags>\n          <title>Projects</title>\n          <meta name=\"projects\" content=\"Project content\"></meta>\n          <meta name=\"keywords\" content=\"projects, samuel davidson projects, web developer projects, portfolio projects, nerd developer projects\"></meta>\n        </MetaTags>\n        <Header />\n        <Container fluid>\n          <h1>Projects</h1>\n          <h2>Quiz App</h2>\n          <Alert color=\"info\">\n            I chose to include the quiz application because it was my initial introduction into using a database and react together for a full-stack application. \n            <a href=\"https://github.com/ASL-WDD442/asl-quiz-app-SamSDavidson\" className=\"alert-link\">Repository</a>.\n            My GitHub Repository for this project.\n          </Alert>\n          <h2>Advanced Serverside Languages Project</h2>\n          <Alert color=\"success\">\n            Advanced Server-Side Langauges, or ASL, allowed me to take a further deep dive into using API's and how they interact with an active application.\n            <a href=\"https://github.com/ASL-WDD442/asl-final-SamSDavidson/tree/master/web\" className=\"alert-link\">Repository</a>\n            The ASL Repository\n          </Alert>\n          <h2>ShipIt</h2>\n          <Alert color=\"danger\">\n          The ShipIt project introudced adding Redux and a backend to an existing front-end design. This further allowed me to understand redux as well as back-end systems. There was also an introduction into continuous integration and test-driven development.\n            <a href=\"https://github.com/ePortfolios/wd6-project-2005-SamSDavidson/tree/stage\" className=\"alert-link\">Repository</a>.\n            <a href=\"https://shipit-staged.herokuapp.com/\" className=\"alert-link\">ShipIt</a>\n            The live version of ShipIt\n          </Alert>\n          <h2>Capstone</h2>\n          <Alert color=\"warning\">\n          The Capstone was the true accumulation of my knowledge. This allowed me to devle into designing my own front end, using GitHub workflows as well as a matching back-end API and database. This combined all factors of the previous applications and was hosted on Heroku.\n            <a href=\"https://github.com/fs-tech-degs/capstone-project-2003-SamSDavidson\" className=\"alert-link\">Repository</a>.\n            <a href=\"https://storiesofanotherworld.herokuapp.com/\">Stories of Another World</a>\n            The live version of my Capstone Project\n          </Alert>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport styles from './post.module.css';\n\nclass Post extends Component {\n  render() {\n    const post = this.props.post;\n    const id = post.id;\n    return (\n      <div className={styles.post}>\n        <h2>{post.title}</h2>\n        <p>{post.content}</p>\n      </div>\n    )\n  }\n}\n\nexport default Post;","import axios from 'axios';\n\nconst API = axios.create({\n baseURL: process.env.API_URL || 'https://private-52fbf1-ssdevelops.apiary-mock.com/'\n});\n\nexport default API;","import { connect } from 'react-redux';\nimport { fetchPosts } from '../../store/posts/actions';\n\nfunction mapStateToProps(state) {\n  const {\n    posts: { byId, allIds }\n  } = state;\n  // turn the array of ids into an array of objects\n  return { posts: allIds.map(id => byId[id].data) };\n}\n\nconst mapDispatchToProps = { fetchPosts };\nexport default connect(mapStateToProps, mapDispatchToProps);","import { v1 as uuid } from 'uuid';\nimport API from '../_utils/API';\nimport {\n  REQ_POSTS_PENDING,\n  REQ_POSTS_SUCCESS,\n  REQ_POSTS_ERROR,\n  ADD_POST_ERROR,\n  ADD_POST_PENDING,\n  ADD_POST_SUCCESS,\n  REQ_POST_PENDING,\n  REQ_POST_SUCCESS,\n  REQ_POST_ERROR,\n  UPDATE_POST_ERROR,\n  UPDATE_POST_PENDING,\n  UPDATE_POST_SUCCESS\n} from '../actionTypes';\n\nconst CACHE_TIME = 1000 * 60 * 5;\n\nexport const fetchPosts = () => ({\n  types: [REQ_POSTS_PENDING, REQ_POSTS_SUCCESS, REQ_POSTS_ERROR],\n  callAPI: () => API.get('/posts'),\n  // check app state and call API if applicable\n  shouldCallAPI: state => {\n    const { loadedAt, isLoading } = state.posts;\n    // check if posts are loading\n    if (isLoading) return false;\n    const isCached = Date.now() - loadedAt < CACHE_TIME;\n    // if empty or timeout on request make the API req\n    return !loadedAt || !isCached;\n  }\n});\n\nexport const createPost = post => {\n  const id = uuid();\n  return {\n    types: [ADD_POST_ERROR, ADD_POST_PENDING, ADD_POST_SUCCESS],\n    callAPI: () => API.post('/posts', { id, ...post }),\n    payload: { id }\n  };\n};\n\nexport const fetchPost = id => ({\n  types: [REQ_POST_ERROR, REQ_POST_PENDING, REQ_POST_SUCCESS],\n  callAPI: () => API.get(`/posts/${id}`),\n\n  shouldCallAPI: state => {\n    const post = state.posts.byId[id] || {};\n    const { loadedAt, isLoading } = post;\n    if (!post || isLoading) return false;\n    const isCached = Date.now() - loadedAt < CACHE_TIME;\n    return !loadedAt || !isCached;\n    \n  },\n  payload: { id }\n});\n\nexport const updatePost = post => ({\n  types: [UPDATE_POST_ERROR, UPDATE_POST_PENDING, UPDATE_POST_SUCCESS],\n  callAPI: () => API.put(`/posts/${post.id}`, post),\n  payload: { id: post.id }\n});\n","// Posts\nexport const REQ_POSTS_PENDING = 'REQ_POSTS_PENDING';\nexport const REQ_POSTS_SUCCESS = 'REQ_POSTS_SUCCESS';\nexport const REQ_POSTS_ERROR = 'REQ_POSTS_ERROR';\nexport const REQ_POST_PENDING = 'REQ_POST_PENDING';\nexport const REQ_POST_SUCCESS = 'REQ_POST_SUCCESS';\nexport const REQ_POST_ERROR = 'REQ_POST_ERROR';\nexport const ADD_POST_PENDING = 'ADD_POST_PENDING';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_ERROR = 'ADD_POST_ERROR';\nexport const UPDATE_POST_PENDING = 'UPDATE_POST_PENDING';\nexport const UPDATE_POST_SUCCESS = 'UPDATE_POST_SUCCESS';\nexport const UPDATE_POST_ERROR = 'UPDATE_POST_ERROR';\nexport const DELETE_POST_PENDING = 'DELETE_POST_PENDING';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_ERROR = 'DELETE_POST_ERROR';","import React, { Component } from 'react';\nimport Header from '../../components/header/index';\nimport { MetaTags } from 'react-meta-tags';\nimport Post from '../../components/post/index';\nimport PropTypes from 'prop-types';\nimport {Row, Col} from 'reactstrap';\nimport Container from './container';\n\nclass Blog extends Component {\n  componentDidMount() {\n    const { fetchPosts } = this.props;\n    fetchPosts();\n  }\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <div>\n\n      <Header />\n        <h1>Blog Posts</h1>\n        {posts.length === 0 ? (\n          <div>\n            <h2>No Posts loaded yet!</h2> <p>Be the first to add a post!</p>\n          </div>\n        ) : (\n          <div>\n              {posts.map(post => (\n                  <Post post={post} />\n              ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nBlog.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object),\n  fetchPosts: PropTypes.func.isRequired\n};\nBlog.defaultProps = {\n  posts: [\n  ]\n};\n\n\nexport default Container(Blog);","import createReducer from '../_utils/createReducers';\n\nimport {\n  REQ_POSTS_PENDING,\n  REQ_POSTS_SUCCESS,\n  REQ_POSTS_ERROR,\n  \n  ADD_POST_ERROR,\n  ADD_POST_PENDING,\n  ADD_POST_SUCCESS,\n\n  REQ_POST_PENDING,\n  REQ_POST_SUCCESS,\n  REQ_POST_ERROR,\n\n  UPDATE_POST_ERROR,\n  UPDATE_POST_PENDING,\n  UPDATE_POST_SUCCESS\n} from '../actionTypes';\n\nconst initialState = {\n  // hold id = key\n  byId: {},\n  // [] of ids\n  allIds: [],\n\n  // needed for cache state\n  loadedAt: 0,\n  // tracking if the state is loading\n  isLoading: false,\n  // any errors loading all the data\n  error: null\n};\n\nfunction postsPending(state, action) {\n  return { ...state, isLoading: true, error: null };\n}\n\nfunction postsSuccess(state, action) {\n  return {\n    ...state,\n    isLoading: false,\n    loadedAt: Date.now(),\n    error: null,\n    byId: {\n      ...state.byId,\n      ...action.data.reduce(\n        (posts, post) => ({\n          // current opject\n          ...posts,\n          // add id as key and an object for loading\n          [post.id]: {\n            data: post,\n            isLoading: false,\n            loadedAt: Date.now(),\n            error: null\n          }\n        }),\n        {}\n      )\n    },\n    allIds: [...new Set([...state.allIds, ...action.data.map(post => post.id)])]\n  };\n}\n\nfunction postsError(state, action) {\n  return {\n    ...state,\n    isLoading: false,\n    error: action.err\n  };\n}\n\nfunction postPending(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        ...state.byId[action.payload.id],\n        isLoading: true,\n        error: null\n      }\n    }\n  };\n}\n\nfunction postSuccess(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        isLoading: false,\n        error: null,\n        loadedAt: Date.now(),\n        data: action.data\n      }\n    },\n    allIds: [...new Set([...state.allIds, ...action.payload.id])]\n  };\n}\n\nfunction postError(state, action) {\n  return {\n    ...state,\n    byId: {\n      ...state.byId,\n      [action.payload.id]: {\n        ...state.byId[action.payload.id],\n        isLoading: false,\n        error: action.err\n      }\n    }\n  };\n}\n\nexport default createReducer(initialState, {\n  [REQ_POSTS_PENDING]: postsPending,\n  [REQ_POSTS_SUCCESS]: postsSuccess,\n  [REQ_POSTS_ERROR]: postsError,\n\n  [ADD_POST_ERROR]: postError,\n  [ADD_POST_PENDING]: postPending,\n  [ADD_POST_SUCCESS]: postSuccess,\n\n  [REQ_POST_ERROR]: postError,\n  [REQ_POST_PENDING]: postPending,\n  [REQ_POST_SUCCESS]: postSuccess,\n\n  [UPDATE_POST_PENDING]: postPending,\n  [UPDATE_POST_SUCCESS]: postSuccess,\n  [UPDATE_POST_ERROR]: postError\n});\n","// take init state and handlers\nexport default function createReducer(initialState, handlers) {\n  // returns reducer function called for each dispatch\n  return function reducer(state = initialState, action) {\n    if (handlers[action.type]) {\n      // return the state\n      return handlers[action.type](state, action);\n    }\n    return state;\n  };\n}\n","// redux imports\nimport { combineReducers, createStore, applyMiddleware } from 'redux';\n// middleware imports\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport callAPI from './_utils/callAPIMiddleware';\nimport posts from './posts/reducer';\n\n// pull our reducers\n\n// combine reducers\nconst rootReducer = combineReducers({\n  posts\n});\n\n// set up middleware\nconst middleware = applyMiddleware(thunkMiddleware, callAPI, createLogger());\n\n// create a redux store\nconst store = createStore(rootReducer, middleware);\n\nexport default store;\n","export default function callAPIMiddleware({ dispatch, getState }) {\n  return next => async action => {\n    const { types, callAPI, shouldCallAPI = () => true, ...props } = action;\n    if (!types) {\n      next(action);\n      return;\n    }\n\n    if (\n      !Array.isArray(types) ||\n      types.length !== 3 ||\n      !types.every(type => typeof type === 'string')\n    ) {\n      throw new Error('Expected an array of three string types.');\n    }\n\n    if (typeof callAPI !== 'function') {\n      throw new Error('Expected callAPI to be a function.');\n    }\n    if (!shouldCallAPI(getState())) {\n      return;\n    }\n    const [requestType, successType, failureType] = types;\n    dispatch({\n      ...props,\n      type: requestType\n    });\n    try {\n      const resp = await callAPI();\n      dispatch({\n        ...props,\n        type: successType,\n        data: resp.data\n      });\n    } catch (err) {\n      dispatch({\n        ...props,\n        type: failureType,\n        err\n      });\n    }\n  };\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Landing from './pages/landing/index';\nimport About from './pages/about/index';\nimport Projects from './pages/projects/index';\nimport Blog from './pages/blog/index';\nimport { MetaTags } from 'react-meta-tags'\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <MetaTags>\n          <meta name=\"Portfolio\" content=\"Portfolio content\"></meta>\n          <meta name=\"keywords\" content=\"website,development,nerd,samuel davidson,react,reacstrap, website development\"></meta>\n        </MetaTags>\n        <Router>\n          <Route path=\"/\" exact component={Landing} />\n          <Route path=\"/about\" exact component={About} />\n          <Route path=\"/projects\" exact component={Projects} />\n          <Route path=\"/blog\" exact component={Blog} />\n        </Router>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"landing_content__3K8Om\",\"pageCards\":\"landing_pageCards__M8kCk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__31MrX\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}